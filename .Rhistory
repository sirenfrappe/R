dim(
subset(
data[[i]],
data[[i]]$Modification!=0)
)[1]
)
}
#差异性检验
shapiro.test(data.rate.normaldisease[,1])
#p-value = 9.919e-12
shapiro.test(data.rate.normaldisease[,2])
#p-value < 2.2e-16
#方差齐性检验
bartlett.test(c(data.rate.normaldisease[,1],data.rate.normaldisease[,2])~factor(c(rep(1,143),rep(2,143))))
#远小于0.05，采用非参数检验
wilcox.test(data.rate.normaldisease[,1],data.rate.normaldisease[,2],paired=TRUE)
#远小于0.05，采用非参数检验
wilcox.test(data.rate.normaldisease[,1],data.rate.normaldisease[,2],paired=TRUE,alternative = "less")
#远小于0.05，采用非参数检验
wilcox.test(data.rate.normaldisease[,1],data.rate.normaldisease[,2],paired=TRUE,alternative = "greater")
data("mtcars")
boxplot(mtcars$mpg~mtcars$am,ylab='mpg',names = c('automatic','manual))
boxplot(mtcars$mpg~mtcars$am,ylab='mpg',names = c('automatic','manual'))
mtcars$mpg
path <- "D:\\idps\\idps\\output"
path <- "D:\\idps\\idps\\output"
filename <- dir(path)
filename
class(filename)
library("httr")
for (i in filename) {
cat(i)
}
library("tidyverse")
for (i in filename) {
sequ <-
content(GET(
paste("http://mobidb.bio.unipd.it/ws/",i, "/uniprot", sep = "")
))$sequence
cat(sequ,"\t")
leng <- content(GET(
paste("http://mobidb.bio.unipd.it/ws/", i, "/uniprot", sep = "")
))$length
cat(leng,"\n")
}
for (i in filename) {
sequ <-
content(GET(
paste("http://mobidb.bio.unipd.it/ws/",i, "/uniprot", sep = "")
))$sequence
cat(i,"\t")
leng <- content(GET(
paste("http://mobidb.bio.unipd.it/ws/", i, "/uniprot", sep = "")
))$length
cat(leng,"\n")
}
i <- "1A01_HUMAN"
content(GET(
paste("http://mobidb.bio.unipd.it/ws/", i, "/uniprot", sep = "")
))
id <- read.table("D:/idps/data/dbPTM/uniprot-yourlist_M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B.tab",header = T,sep = "\t",stringsAsFactors = FALSE)[,1:2]
id
id[,i]
id["i"]
id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B=i,]
id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B=i,]
id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B==i,]
id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B==i,][,1]
id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B==i,][,1][[1]]
for (i in filename) {
AC <- id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B==i,][,1]
sequ <-
content(GET(
paste("http://mobidb.bio.unipd.it/ws/",i, "/uniprot", sep = "")
))$sequence
cat(i,"\t")
leng <- content(GET(
paste("http://mobidb.bio.unipd.it/ws/", i, "/uniprot", sep = "")
))$length
cat(leng,"\n")
}
for (i in filename) {
AC <- id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B==i,][,1]
sequ <-
content(GET(
paste("http://mobidb.bio.unipd.it/ws/",AC, "/uniprot", sep = "")
))$sequence
cat(i,"\t")
leng <- content(GET(
paste("http://mobidb.bio.unipd.it/ws/", AC, "/uniprot", sep = "")
))$length
cat(leng,"\n")
}
content(GET(
paste("http://mobidb.bio.unipd.it/ws/", AC, "/uniprot", sep = "")
))
GET("http://mobidb.bio.unipd.it/ws/P30443/uniprot")
content(GET("http://mobidb.bio.unipd.it/ws/P30443/uniprot"))
paste("http://mobidb.bio.unipd.it/ws/",i, "/uniprot", sep = "")
content(GET("http://mobidb.bio.unipd.it/ws/P30443/uniprot"))$length
for (i in filename) {
AC <- id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B==i,][,1]
cat(i,"\t")
leng <- content(GET(
paste("http://mobidb.bio.unipd.it/ws/", AC, "/uniprot", sep = "")
))$length
cat(leng,"\n")
}
i
AC <- id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B==i,][,1]
AC
paste("http://mobidb.bio.unipd.it/ws/", AC, "/uniprot", sep = "")
for (i in filename) {
AC <- id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B==i,][,2]
cat(i,"\t")
leng <- content(GET(
paste("http://mobidb.bio.unipd.it/ws/", AC, "/uniprot", sep = "")
))$length
cat(leng,"\n")
}
id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B=="MED_HUMAN",]
path <- "D:\\idps\\idps\\output"
filename <- dir(path)
library("httr")
id <- read.table("D:/idps/data/dbPTM/uniprot-yourlist_M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B.tab",header = T,sep = "\t",stringsAsFactors = FALSE)[,1:2]
library("tidyverse")
for (i in filename) {
AC <- id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B==i,][,2]
cat(i,"\t")
leng <- content(GET(
paste("http://mobidb.bio.unipd.it/ws/", AC, "/uniprot", sep = "")
))$length
cat(leng,"\n")
}
new <- id[id$yourlist.M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B!=filename,]
path <- "D:/idps/script/output/mobidb"
fileName <- dir(path)
filePath <- sapply(fileName,function(x){
paste(path,x,sep = "/")
})
data <- lapply(filePath,function(x){
read.table(x,header = T,sep = "\t",quote = NULL,stringsAsFactors = F)
})
data.disease <- lapply(data, function(x){
subset(x,x$RelatedDisease!=0)
})
#蛋白长度与PTM个数关系图
data.lengthANDPTM <- data.frame(matrix(NA,143,2))
colnames(data.lengthANDPTM) <- c("length","num")
for (i in 1:143) {
data.lengthANDPTM[i,1] <- dim(data[[i]])[1]
data.lengthANDPTM[i,2] <- dim(subset(data[[i]],data[[i]]$Modification!=0))[[1]]
}
library(ggplot2)
ggplot(data.lengthANDPTM,aes(x=data.lengthANDPTM$length,y=data.lengthANDPTM$num))+
geom_point()+
geom_text(label=data.lengthANDPTM$num,vjust=-0.5)+
xlab("长度")+
ylab("个数")+
geom_smooth(method = 'auto')
#去除蛋白长度对位点个数的影响
data.rate.normaldisease <- data.frame(matrix(NA,143,2))
colnames(data.rate.normaldisease) <- c("normal","disease")
#分母：PTM个数*蛋白长度
for (i in 1:143) {
data.rate.normaldisease[i,2] <- dim(data.disease[[i]])[1]/(dim(data[[i]])[1]*
dim(
subset(
data[[i]],
data[[i]]$Modification!=0)
)[1]
)
data.rate.normaldisease[i,1] <- (dim(subset(data[[i]],data[[i]]$Modification!=0))[1]-dim(data.disease[[i]])[1])/(dim(data[[i]])[1]*
dim(
subset(
data[[i]],
data[[i]]$Modification!=0)
)[1]
)
}
#差异性检验
shapiro.test(data.rate.normaldisease[,1])
#p-value = 9.919e-12
shapiro.test(data.rate.normaldisease[,2])
#p-value < 2.2e-16
#方差齐性检验
bartlett.test(c(data.rate.normaldisease[,1],data.rate.normaldisease[,2])~factor(c(rep(1,143),rep(2,143))))
#远小于0.05，采用非参数检验
wilcox.test(data.rate.normaldisease[,1],data.rate.normaldisease[,2],paired=TRUE)
？wilcox.test()
?wilcox.test
#远小于0.05，采用非参数检验
wilcox.test(data.rate.normaldisease[,1],data.rate.normaldisease[,2],paired=TRUE,alternative = "less")
#远小于0.05，采用非参数检验
wilcox.test(data.rate.normaldisease[,1],data.rate.normaldisease[,2],paired=TRUE,alternative = "greater")
data.rate.normaldisease
wilcox.test(data.rate.normaldisease[,2],data.rate.normaldisease[,1],paired=TRUE,alternative = "less")
data.PTM <- lapply(data, function(x) {
subset(x, x$Modification != 0)
})
#疾病、无序/结构，打分>0.501判断
data.disease.stru <- lapply(data.disease, function(x) {
subset(x, x$mobidb.disorder.predictors.mobidb.lite.score < 0.501)
})
data.disease.diso <- lapply(data.disease, function(x) {
subset(x, x$mobidb.disorder.predictors.mobidb.lite.score > 0.501)
})
#疾病无关、无序/结构，打分>0.501判断
data.normal <- lapply(data, function(x) {
subset(x, x$RelatedDisease == 0 & x$Modification != 0)
})
data.normal.stru <- lapply(data.normal, function(x) {
subset(x, x$mobidb.disorder.predictors.mobidb.lite.score < 0.501)
})
data.normal.diso <- lapply(data.normal, function(x) {
subset(x, x$mobidb.disorder.predictors.mobidb.lite.score > 0.501)
})
#疾病不相关PTM位点无序与否差异性检测
data.rate.NPTM <- data.frame(matrix(NA, 143, 2))
colnames(data.rate.NPTM) <- c("stru", "diso")
#疾病无关
#分母：PTM个数*蛋白长度
for (i in 1:143) {
data.rate.NPTM[i, 1] <-
dim(data.normal.stru[[i]])[1] / (dim(data[[i]])[1] *
dim(subset(data[[i]],
data[[i]]$Modification !=
0))[1])
data.rate.NPTM[i, 2] <-
dim(data.normal.diso[[i]])[1] / (dim(data[[i]])[1] *
dim(subset(data[[i]],
data[[i]]$Modification !=
0))[1])
}
shapiro.test(data.rate.NPTM[, 1])
shapiro.test(data.rate.NPTM[, 2])
#p<0.05
bartlett.test(c(data.rate.NPTM[, 1], data.rate.NPTM[, 2]) ~ factor(c(rep(1, 143), rep(2, 143))))
#p-value = 1.043e-08
wilcox.test(data.rate.NPTM[, 1], data.rate.NPTM[, 2], paired = TRUE)
library(ggplot2)
data.rate.NPTM
head(data.rate.NPTM[, 1])
head(data.rate.NPTM)
wilcox.test(data.rate.NPTM[, 1], data.rate.NPTM[, 2], paired = TRUE,alternative = "less")
wilcox.test(data.rate.NPTM[, 2], data.rate.NPTM[, 1], paired = TRUE,alternative = "less")
#疾病相关
data.rate.DPTM <- data.frame(matrix(NA, 143, 2))
colnames(data.rate.DPTM) <- c("stru", "diso")
for (i in 1:143) {
data.rate.DPTM[i, 1] <-
dim(data.disease.stru[[i]])[1] / (dim(data[[i]])[1] *
dim(subset(data[[i]],
data[[i]]$Modification !=
0))[1])
data.rate.DPTM[i, 2] <-
dim(data.disease.diso[[i]])[1] / (dim(data[[i]])[1] *
dim(subset(data[[i]],
data[[i]]$Modification !=
0))[1])
}
shapiro.test(data.rate.DPTM[, 1])
shapiro.test(data.rate.DPTM[, 2])
#p<0.05
bartlett.test(c(data.rate.DPTM[, 1], data.rate.DPTM[, 2]) ~ factor(c(rep(1, 143), rep(2, 143))))
# p-value < 2.2e-16
wilcox.test(data.rate.DPTM[, 1], data.rate.DPTM[, 2], paired = TRUE)
head(data.rate.DPTM)
data.rate.DPTM[,2]
# p-value < 2.2e-16
wilcox.test(data.rate.DPTM[, 2], data.rate.DPTM[, 1], paired = TRUE,alternative = "less")
wilcox.test(data.rate.DPTM[, 2], data.rate.NPTM[, 2], paired = TRUE,alternative = "less")
path <- "D:\\idps\\idps\\output"
filename <- dir(path)
library("httr")
id <- read.table("D:/idps/data/dbPTM/uniprot-yourlist_M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B.tab",header = T,sep = "\t",stringsAsFactors = FALSE)[,1:2]
id
filename
library(tidyverse)
library(nycflights13)
colnames(id) <- c("ID","AC")
head(id)
tribble(id)
as_tibble(id)
id <- as_tibble(id)
doneName <- tibble(ID = filename)
doneName
id %>%
full_join(doneName,by="ID")
doneName <- tibble(ID = filename,done=1)
view(doneName)
id %>%
full_join(doneName,by="ID")
id %>%
anti_join(doneName)
undone <- id %>%
anti_join(doneName)
undone
143-89
#查询未完成任务ID，假设已完成预测结果全部存放在path变量所指的文件夹下
path <- "D:\\idps\\idps\\output"
filename <- dir(path)
id <-
read.table(
"D:/idps/data/dbPTM/uniprot-yourlist_M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B.tab",
header = T,
sep = "\t",
stringsAsFactors = FALSE
)[, 1:2]
colnames(id) <- c("ID", "AC")
id <- as_tibble(id)
#查询未完成任务ID，假设已完成预测结果全部存放在path变量所指的文件夹下
library(tidyverse)
path <- "D:\\idps\\idps\\output"
filename <- dir(path)
id <-
read.table(
"D:/idps/data/dbPTM/uniprot-yourlist_M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B.tab",
header = T,
sep = "\t",
stringsAsFactors = FALSE
)[, 1:2]
colnames(id) <- c("ID", "AC")
id <- as_tibble(id)
doneName <- tibble(ID = filename)
undone <- id %>%
anti_join(doneName)
view(undone)
path <- dir("D:\idps\idps\output")
path <- dir("D:\\idps\\idps\\output")
path
length(path)
for (i in path) {
cat(i,"\t")
}
#DNCON2预测结果rr文件转化为邻接矩阵
library(tidyverse)
i
str_c("D:\\idps\\idps\\output\\",i,"\\",i,".rr.raw")
data <- read_table(filename)
filename <- str_c("D:\\idps\\idps\\output\\",i,"\\",i,".rr.raw")
data <- read_table(filename)
?read_table()
data <- read_table2(filename)
data <- read_csv(filename)
data <- read_table2(filename)
data
data <- read_table(filename)
data
data <- read_table(filename,col_names = F)
data
data <- read_delim(filename,col_names = F)
data <- read_delim(filename,delim=" ",col_names = F)
data
data <- read_delim(filename,delim=" ",col_names = F,quote="")
data
data <- read.table(filename)
data
data <- read.table(filename)[,c(1,2,5)]
data
data[[1]]
data[[3]]
tail(data)
i
len <- data(dim(data)[1],2)
dim(data)[1]
data(dim(data)[1],2)
len <- data[dim(data)[1],2]
len
outmatrix <- matrix(1,nrow = len,ncol = len)
j <- 1
tem <- data[j,]
tem
tem[1]
tem[2]
tem[3]
outmatrix <- matrix(1,nrow = len,ncol = len)
for (j in 1:dim(data)[1]) {
tem <- data[j,]
outmatrix[tem[1],tem[2]] <- tem[3]
outmatrix[tem[2],tem[1]] <- tem[3]
}
outmatrix[tem[1],tem[2]]
for (j in 1:dim(data)[1]) {
tem <- data[j,]
outmatrix[tem[1,1],tem[2,1]] <- tem[3]
outmatrix[tem[2,1],tem[1,1]] <- tem[3]
}
for (j in 1:dim(data)[1]) {
tem <- data[j,]
outmatrix[tem[1,1],tem[2,1]] <- tem[3,1]
outmatrix[tem[2,1],tem[1,1]] <- tem[3,1]
}
p
outmatrix
outmatrix <- matrix(1,nrow = len,ncol = len)
outmatrix
for (j in 1:dim(data)[1]) {
num1 <- data[j,1]
num2 <- data[j,2]
p <- data[j,3]
outmatrix[num1,num2] <- p
outmatrix[num2,num1] <- p
}
view(outmatrix)
str_c("D:\\idps\\script\\output\\rr2matrix\\",i,".txt")
write.table(outmatrix,file = str_c("D:\\idps\\script\\output\\rr2matrix\\",i,".txt"),sep="\t",quote = FALSE,
row.names = FALSE,)
write.table(outmatrix,file = str_c("D:\\idps\\script\\output\\rr2matrix\\",i,".txt"),sep="\t",quote = FALSE,
row.names = FALSE,col.names = F)
data
outmatrix <- data.frame(matrix(1,nrow = len,ncol = len))
for (j in 1:dim(data)[1]) {
num1 <- data[j,1]
num2 <- data[j,2]
p <- data[j,3]
outmatrix[num1,num2] <- p
outmatrix[num2,num1] <- p
}
outmatrix[60]
outmatrix[60,]
outmatrix[60,1]
as.character(data[,3])
data
for (i in path) {
filename <- str_c("D:\\idps\\idps\\output\\",i,"\\",i,".rr.raw")
data <- read.table(filename)[,c(1,2,5)]
len <- data[dim(data)[1],2]
outmatrix <- matrix(1,nrow = len,ncol = len)
for (j in 1:dim(data)[1]) {
num1 <- data[j,1]
num2 <- data[j,2]
p <- data[j,3]
outmatrix[num1,num2] <- p
outmatrix[num2,num1] <- p
}
write.table(outmatrix,file = str_c("D:\\idps\\script\\output\\rr2matrix\\",i,".txt"),sep="\t",quote = FALSE,
row.names = FALSE,col.names = F)
}
#查询未完成任务ID，假设已完成预测结果全部存放在path变量所指的文件夹下
library(tidyverse)
path <- "D:\\idps\\idps\\output"
filename <- dir(path)
id <-
read.table(
"D:/idps/data/dbPTM/uniprot-yourlist_M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B.tab",
header = T,
sep = "\t",
stringsAsFactors = FALSE
)[, 1:2]
colnames(id) <- c("ID", "AC")
id <- as_tibble(id)
doneName <- tibble(ID = filename)
undone <- id %>%
anti_join(doneName)
view(undone)
#查询未完成任务ID，假设已完成预测结果全部存放在path变量所指的文件夹下
library(tidyverse)
path <- "D:\\idps\\idps\\output"
filename <- dir(path)
id <-
read.table(
"D:/idps/data/dbPTM/uniprot-yourlist_M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B.tab",
header = T,
sep = "\t",
stringsAsFactors = FALSE
)[, 1:2]
colnames(id) <- c("ID", "AC")
#查询未完成任务ID，假设已完成预测结果全部存放在path变量所指的文件夹下
library(tidyverse)
path <- "D:\\idps\\idps\\output"
filename <- dir(path)
id <-
read.table(
"D:/idps/data/dbPTM/uniprot-yourlist_M20190417216DA2B77BFBD2E6699CA9B6D1C41EB202F439B.tab",
header = T,
sep = "\t",
stringsAsFactors = FALSE
)[, 1:2]
colnames(id) <- c("ID", "AC")
id <- as_tibble(id)
doneName <- tibble(ID = filename)
undone <- id %>%
anti_join(doneName)
view(undone)
147+96
dim(undone)[1]
undone[1,1]
i <- 1
str1 <- str_c("~/DNCON2/DNCON2/dncon2-v1.0.sh ~/DNCON2/protein/",undone[i,1],".fasta ~/DNCON2/output/",undone[i,1],"/ > ~/DNCON2/log/",undone[i,1],".log")
str1
for (i in 1:dim(undone)[1]) {
str1 <- str_c("~/DNCON2/DNCON2/dncon2-v1.0.sh ~/DNCON2/protein/",undone[i,1],".fasta ~/DNCON2/output/",undone[i,1],"/ > ~/DNCON2/log/",undone[i,1],".log")
cat(str1,"D:\\idps\\script\\dncon2RUN.sh",append = T,sep = "\n")
}
for (i in 1:dim(undone)[1]) {
str1 <- str_c("~/DNCON2/DNCON2/dncon2-v1.0.sh ~/DNCON2/protein/",undone[i,1],".fasta ~/DNCON2/output/",undone[i,1],"/ > ~/DNCON2/log/",undone[i,1],".log")
cat(str1,append = T,sep = "\n","D:\\idps\\script\\dncon2RUN.sh")
}
?cat
for (i in 1:dim(undone)[1]) {
str1 <- str_c("~/DNCON2/DNCON2/dncon2-v1.0.sh ~/DNCON2/protein/",undone[i,1],".fasta ~/DNCON2/output/",undone[i,1],"/ > ~/DNCON2/log/",undone[i,1],".log")
cat(str1,append = T,sep = "\n",file = "D:\\idps\\script\\dncon2RUN.sh")
}
for (i in 1:dim(undone)[1]) {
str1 <- str_c("~/DNCON2/DNCON2/dncon2-v1.0.sh ~/DNCON2/protein/",undone[i,1],".fasta ~/DNCON2/output/",undone[i,1],"/ > ~/DNCON2/log/",undone[i,1],".log")
cat(str1,"wait",append = T,sep = "\n",file = "D:\\idps\\script\\dncon2RUN.sh")
}
for (i in 1:dim(undone)[1]) {
str1 <- str_c("~/DNCON2/DNCON2/dncon2-v1.0.sh ~/DNCON2/protein/",undone[i,1],".fasta ~/DNCON2/output/",undone[i,1],"/ > ~/DNCON2/log/",undone[i,1],".log")
cat(str1,"wait",append = T,sep = "\n",file = "D:\\idps\\script\\dncon2RUN.sh")
}
